package Telaprincipal;

import BACK.Conexao;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JList;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;



/**
 *
 * @author johnp
 */
public class Alterpreco extends javax.swing.JFrame {
    
    
    private String id;
    
    
    public Alterpreco() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        Scrolllist.setVisible(false);
        Lista.setVisible(false);
        idproduto.setEditable(false);
        Mostraprecoatual.setEditable(false);
        estoquemostrar.setEditable(false);
        idproduto.setHorizontalAlignment(SwingConstants.CENTER);
        Mostraprecoatual.setHorizontalAlignment(SwingConstants.CENTER);
        estoquemostrar.setHorizontalAlignment(SwingConstants.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        Confrimarnome1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        Confrimarestoque = new javax.swing.JButton();
        voltar2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        estoquemostrar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        idproduto = new javax.swing.JTextField();
        Divisoria = new javax.swing.JLabel();
        Divisoria1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Mostraprecoatual = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Recebepreconovo = new javax.swing.JTextField();
        Voltar1 = new javax.swing.JButton();
        Confrimarpreco = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        Recebenome = new javax.swing.JTextField();
        Divisoria2 = new javax.swing.JLabel();
        Scrolllist = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        Lista = new javax.swing.JList<>();
        Confrimarnome = new javax.swing.JButton();
        voltar3 = new javax.swing.JButton();
        Divisoria3 = new javax.swing.JLabel();
        estoquealtera = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/mtpequena.png"))); // NOI18N

        Confrimarnome1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Confrimarnome1.setText("Confirmar");
        Confrimarnome1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Confrimarnome1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Confrimarnome1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setFocusCycleRoot(false);
        setMinimumSize(new java.awt.Dimension(552, 498));
        setName("alterapreco"); // NOI18N
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Palatino Linotype", 1, 18)); // NOI18N
        jLabel1.setText("Digite o nome do produto:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 20, 240, 26);

        txtNome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 102)));
        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeKeyReleased(evt);
            }
        });
        getContentPane().add(txtNome);
        txtNome.setBounds(10, 40, 230, 30);

        Confrimarestoque.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Confrimarestoque.setText("Confirmar");
        Confrimarestoque.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Confrimarestoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfrimarestoqueActionPerformed(evt);
            }
        });
        getContentPane().add(Confrimarestoque);
        Confrimarestoque.setBounds(420, 110, 100, 30);

        voltar2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        voltar2.setText("Voltar");
        voltar2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        voltar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltar2ActionPerformed(evt);
            }
        });
        getContentPane().add(voltar2);
        voltar2.setBounds(320, 110, 90, 30);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Estoque:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 270, 70, 17);

        estoquemostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estoquemostrarActionPerformed(evt);
            }
        });
        getContentPane().add(estoquemostrar);
        estoquemostrar.setBounds(20, 290, 110, 22);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("ID Produto:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 330, 80, 17);

        idproduto.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        idproduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idprodutoActionPerformed(evt);
            }
        });
        getContentPane().add(idproduto);
        idproduto.setBounds(20, 350, 110, 22);

        Divisoria.setText("__________________________________________");
        getContentPane().add(Divisoria);
        Divisoria.setBounds(320, 140, 210, 16);

        Divisoria1.setText("___________________");
        getContentPane().add(Divisoria1);
        Divisoria1.setBounds(30, 310, 100, 16);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Preço atual:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 390, 90, 17);

        Mostraprecoatual.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(Mostraprecoatual);
        Mostraprecoatual.setBounds(20, 420, 110, 22);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Digite o novo preço:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(340, 330, 150, 17);

        Recebepreconovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecebepreconovoActionPerformed(evt);
            }
        });
        getContentPane().add(Recebepreconovo);
        Recebepreconovo.setBounds(320, 360, 200, 30);

        Voltar1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Voltar1.setText("Voltar");
        Voltar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Voltar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Voltar1ActionPerformed(evt);
            }
        });
        getContentPane().add(Voltar1);
        Voltar1.setBounds(320, 420, 90, 30);

        Confrimarpreco.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Confrimarpreco.setText("Confirmar");
        Confrimarpreco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Confrimarpreco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfrimarprecoActionPerformed(evt);
            }
        });
        getContentPane().add(Confrimarpreco);
        Confrimarpreco.setBounds(420, 420, 100, 30);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Digite um novo nome:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(340, 170, 160, 17);
        getContentPane().add(Recebenome);
        Recebenome.setBounds(320, 200, 200, 30);

        Divisoria2.setText("___________________");
        getContentPane().add(Divisoria2);
        Divisoria2.setBounds(30, 370, 100, 16);

        Lista.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        Lista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Lista);

        Scrolllist.setViewportView(jScrollPane1);

        getContentPane().add(Scrolllist);
        Scrolllist.setBounds(10, 70, 230, 160);

        Confrimarnome.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Confrimarnome.setText("Confirmar");
        Confrimarnome.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Confrimarnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfrimarnomeActionPerformed(evt);
            }
        });
        getContentPane().add(Confrimarnome);
        Confrimarnome.setBounds(420, 250, 100, 30);

        voltar3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        voltar3.setText("Voltar");
        voltar3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        voltar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltar3ActionPerformed(evt);
            }
        });
        getContentPane().add(voltar3);
        voltar3.setBounds(320, 250, 90, 30);

        Divisoria3.setText("__________________________________________");
        getContentPane().add(Divisoria3);
        Divisoria3.setBounds(320, 290, 210, 16);

        estoquealtera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estoquealteraActionPerformed(evt);
            }
        });
        getContentPane().add(estoquealtera);
        estoquealtera.setBounds(360, 70, 120, 30);

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Digite um novo estoque:");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(330, 50, 190, 17);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/mtpequena.png"))); // NOI18N
        getContentPane().add(jLabel9);
        jLabel9.setBounds(-390, -350, 950, 850);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ConfrimarestoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfrimarestoqueActionPerformed
       String novoEstoque = estoquealtera.getText(); 
    String idProduto = idproduto.getText();
    atualizarEstoqueProduto(idProduto, novoEstoque);
    JOptionPane.showMessageDialog(null, "Estoque do produto atualizado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
    dispose(); 
    }//GEN-LAST:event_ConfrimarestoqueActionPerformed

    private void voltar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltar2ActionPerformed
        dispose();
    }//GEN-LAST:event_voltar2ActionPerformed

    private void idprodutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idprodutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idprodutoActionPerformed

    private void RecebepreconovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecebepreconovoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RecebepreconovoActionPerformed

    private void Voltar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Voltar1ActionPerformed
dispose();
    }//GEN-LAST:event_Voltar1ActionPerformed

    private void ConfrimarprecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfrimarprecoActionPerformed
        String novoPreco = Recebepreconovo.getText(); 
        String idProduto = idproduto.getText();
        atualizarPrecoProduto(idProduto, novoPreco);
        JOptionPane.showMessageDialog(null, "Preço do produto atualizado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
         dispose(); 
    }//GEN-LAST:event_ConfrimarprecoActionPerformed

    private void txtNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyReleased
       String nome =txtNome.getText();
        listarnomes(nome);
    }//GEN-LAST:event_txtNomeKeyReleased

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
            
    }//GEN-LAST:event_txtNomeActionPerformed

    private void estoquemostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estoquemostrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estoquemostrarActionPerformed

    private void Confrimarnome1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Confrimarnome1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Confrimarnome1ActionPerformed

    private void ConfrimarnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfrimarnomeActionPerformed
 
    String novoNome = Recebenome.getText(); 
    String idProduto = idproduto.getText();
    atualizarNomeProduto(idProduto, novoNome);
    JOptionPane.showMessageDialog(null, "Nome do produto atualizado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
    dispose();    


    }//GEN-LAST:event_ConfrimarnomeActionPerformed

    private void voltar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltar3ActionPerformed
dispose();       
    }//GEN-LAST:event_voltar3ActionPerformed

    private void ListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListaMouseClicked
        if (evt.getClickCount() == 1) {
        JList<String> list = (JList<String>)evt.getSource();
        int index = list.getSelectedIndex();
        if (index >= 0) {
            String nomeProduto = (String)list.getModel().getElementAt(index);
            preencherCampos(nomeProduto);
            }
        }
    }//GEN-LAST:event_ListaMouseClicked

    private void estoquealteraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estoquealteraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estoquealteraActionPerformed


    
    
    public void listarnomes(String letra){
  DefaultListModel<String> modelo = new DefaultListModel<>();
    Lista.setModel(modelo);
    String readLista = "SELECT * FROM produtos WHERE nome LIKE ? ORDER BY nome";
    Conexao conexao = new Conexao();
    
    try {
        conexao.conectarExplicitamente(); // Conectar explicitamente antes de obter a conexão
        if (conexao.isConnected()) { // Verificar se a conexão está estabelecida
            try (Connection connection = conexao.getConnection()) {
                if (connection != null) {
                    try (PreparedStatement stmt = connection.prepareStatement(readLista)) {
                        stmt.setString(1, letra + "%");
                        try (ResultSet rs = stmt.executeQuery()) {
                            while (rs.next()) {
                                Scrolllist.setVisible(true);
                                Lista.setVisible(true);
                                modelo.addElement(rs.getString("nome"));
                                if(txtNome.getText().isEmpty()){
                                     Scrolllist.setVisible(false);
                                Lista.setVisible(false);
                                }
                            }
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Não foi possível conectar ao banco de dados", "Erro de conexão", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possível conectar ao banco de dados", "Erro de conexão", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erro ao listar produtos: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
           
    }
    
    
    private void preencherCampos(String nomeProduto) {
    // Consulta ao banco de dados para obter os detalhes do produto com base no nome do produto
    String query = "SELECT idproduto, estoque, preço FROM produtos WHERE nome = ?";
    Conexao conexao = new Conexao();

    try {
        conexao.conectarExplicitamente(); // Conectar explicitamente antes de obter a conexão
        if (conexao.isConnected()) { // Verificar se a conexão está estabelecida
            try (Connection connection = conexao.getConnection()) {
                if (connection != null) {
                    try (PreparedStatement stmt = connection.prepareStatement(query)) {
                        // Define o nome do produto como parâmetro na consulta SQL
                        stmt.setString(1, nomeProduto);
                        try (ResultSet rs = stmt.executeQuery()) {
                            if (rs.next()) {
                                // Preenche os campos de texto com os detalhes do produto
                                
                                idproduto.setText(rs.getString("idproduto"));
                                this.id = idproduto.getText();
                                Recebenome.setText(nomeProduto);
                                estoquemostrar.setText(rs.getString("estoque"));
                                estoquealtera.setText(rs.getString("estoque"));
                                Mostraprecoatual.setText(rs.getString("preço"));
                                Recebepreconovo.setText(rs.getString("preço"));
                                
                            }
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Não foi possível conectar ao banco de dados", "Erro de conexão", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possível conectar ao banco de dados", "Erro de conexão", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erro ao buscar detalhes do produto: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
}

    
    
    private void atualizarNomeProduto(String idProduto, String novoNome) {
    String query = "UPDATE produtos SET nome = ? WHERE idproduto = ?";
    Conexao conexao = new Conexao();
    try {
        conexao.conectarExplicitamente(); 
        if (conexao.isConnected()) { 
            try (Connection connection = conexao.getConnection()) {
                if (connection != null) {
                    try (PreparedStatement stmt = connection.prepareStatement(query)) {
                        stmt.setString(1, novoNome);
                        stmt.setString(2, idProduto);
                        int rowsUpdated = stmt.executeUpdate();
                        if (rowsUpdated > 0) {
                            System.out.println("O nome do produto foi atualizado com sucesso!");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Não foi possível conectar ao banco de dados", "Erro de conexão", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possível conectar ao banco de dados", "Erro de conexão", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erro ao atualizar o nome do produto: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
}

    
    private void atualizarPrecoProduto(String idProduto, String novoPreco) {
    String query = "UPDATE produtos SET preço = ? WHERE idproduto = ?";
    Conexao conexao = new Conexao();
    try {
        conexao.conectarExplicitamente(); 
        if (conexao.isConnected()) { 
            try (Connection connection = conexao.getConnection()) {
                if (connection != null) {
                    try (PreparedStatement stmt = connection.prepareStatement(query)) {
                        stmt.setString(1, novoPreco);
                        stmt.setString(2, idProduto);
                        int rowsUpdated = stmt.executeUpdate();
                        if (rowsUpdated > 0) {
                            System.out.println("O preço do produto foi atualizado com sucesso!");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Não foi possível conectar ao banco de dados", "Erro de conexão", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possível conectar ao banco de dados", "Erro de conexão", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erro ao atualizar o preço do produto: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
}
    
    private void atualizarEstoqueProduto(String idProduto, String novoEstoque) {
    String query = "UPDATE produtos SET estoque = ? WHERE idproduto = ?";
    Conexao conexao = new Conexao();
    try {
        conexao.conectarExplicitamente(); 
        if (conexao.isConnected()) { 
            try (Connection connection = conexao.getConnection()) {
                if (connection != null) {
                    try (PreparedStatement stmt = connection.prepareStatement(query)) {
                        stmt.setString(1, novoEstoque);
                        stmt.setString(2, idProduto);
                        int rowsUpdated = stmt.executeUpdate();
                        if (rowsUpdated > 0) {
                            System.out.println("O estoque do produto foi atualizado com sucesso!");
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Não foi possível conectar ao banco de dados", "Erro de conexão", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possível conectar ao banco de dados", "Erro de conexão", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erro ao atualizar o estoque do produto: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Alterpreco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Alterpreco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Alterpreco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Alterpreco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Alterpreco().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Confrimarestoque;
    private javax.swing.JButton Confrimarnome;
    private javax.swing.JButton Confrimarnome1;
    private javax.swing.JButton Confrimarpreco;
    private javax.swing.JLabel Divisoria;
    private javax.swing.JLabel Divisoria1;
    private javax.swing.JLabel Divisoria2;
    private javax.swing.JLabel Divisoria3;
    private javax.swing.JList<String> Lista;
    private javax.swing.JTextField Mostraprecoatual;
    private javax.swing.JTextField Recebenome;
    private javax.swing.JTextField Recebepreconovo;
    private javax.swing.JScrollPane Scrolllist;
    private javax.swing.JButton Voltar1;
    private javax.swing.JTextField estoquealtera;
    private javax.swing.JTextField estoquemostrar;
    private javax.swing.JTextField idproduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtNome;
    private javax.swing.JButton voltar2;
    private javax.swing.JButton voltar3;
    // End of variables declaration//GEN-END:variables
}
